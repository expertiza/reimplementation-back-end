name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_URL: mysql2://root:expertiza@127.0.0.1:3306/expertiza_test
      RAILS_ENV: test
      
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: expertiza
          MYSQL_DATABASE: expertiza_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7
          bundler-cache: true
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y netcat-traditional
          
      - name: Install Ruby dependencies
        run: |
          gem update --system
          gem install bundler:2.4.7
          bundle install
          
      - name: Setup database
        run: |
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:schema:load RAILS_ENV=test
          
      - name: Set up code climate test-reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Run model tests
        run: bundle exec rspec spec/models

      - name: Run controller tests
        run: bundle exec rspec spec/requests/

      - name: Format code coverage report
        run: ./cc-test-reporter format-coverage -t simplecov -o "coverage/codeclimate.models.json" --debug

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-artifacts
          path: coverage/


  publish_code_coverage:
    needs: test  # Ensures this job runs after the test job
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Only run when there's a push to main branch

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: code-coverage-artifacts
          path: coverage/

      - name: Upload code-coverage report to code-climate
        run: |
          export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter sum-coverage coverage/codeclimate.*.json 
          ./cc-test-reporter after-build -t simplecov -r ${{ secrets.CC_TEST_REPORTER_ID }}

  docker:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: expertiza-backend:latest
