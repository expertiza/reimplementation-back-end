---
openapi: 3.0.1
info:
  title: EXPERTIZA API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- bearerAuth: []
paths:
  "/api/v1/participants":
    get:
      summary: List all participants
      tags:
        - Participants
      responses:
        '200':
          description: A list of participants
    post:
      summary: Create a new participant
      tags:
        - Participants
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                assignment_id:
                  type: integer
              required:
                - user_id
                - assignment_id
      responses:
        '201':
          description: Participant created
        '422':
          description: Unprocessable entity

  "/api/v1/participants/{id}":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Retrieve a participant by ID
      tags:
        - Participants
      responses:
        '200':
          description: Returns the participant details
        '404':
          description: Participant not found
    put:
      summary: Update a participant
      tags:
        - Participants
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                can_submit:
                  type: boolean
                can_review:
                  type: boolean
              required:
                - can_submit
                - can_review
      responses:
        '200':
          description: Participant updated
        '422':
          description: Unprocessable entity
    delete:
      summary: Delete a participant
      tags:
        - Participants
      responses:
        '204':
          description: Participant deleted

  "/api/v1/participants/user/{user_id}":
    parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get participants by user ID
      tags:
        - Participants
      responses:
        '200':
          description: List of participants for the user

  "/api/v1/participants/assignment/{assignment_id}":
    parameters:
      - name: assignment_id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get participants by assignment ID
      tags:
        - Participants
      responses:
        '200':
          description: List of participants for the assignment

  "/api/v1/participants/{id}/{authorization}":
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: authorization
        in: path
        required: true
        schema:
          type: string
    post:
      summary: Add a participant with authorization
      tags:
        - Participants
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
              required:
                - user
      responses:
        '201':
          description: Participant added successfully
        '404':
          description: User not found
    patch:
      summary: Update participant authorization
      tags:
        - Participants
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                can_submit:
                  type: boolean
                can_review:
                  type: boolean
      responses:
        '200':
          description: Authorization updated
        '422':
          description: Unprocessable entity
          # *******
  "/api/v1/account_requests/pending":
    get:
      summary: List all Pending Account Requests
      tags:
      - Account Requests
      responses:
        '200':
          description: List Pending Account Requests
  "/api/v1/account_requests/processed":
    get:
      summary: List all Processed Account Requests
      tags:
      - Account Requests
      responses:
        '200':
          description: List Processed Account Requests
  "/api/v1/account_requests":
    post:
      summary: Create Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '201':
          description: Create an Account Request whose email already exists in Users
            table
        '422':
          description: Attempt to Create an Account Request whose username already
            exists in Users table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                full_name:
                  type: string
                email:
                  type: string
                introduction:
                  type: string
                role_id:
                  type: integer
                institution_id:
                  type: integer
              required:
              - username
              - full_name
              - email
              - introduction
              - role_id
              - institution_id
  "/api/v1/account_requests/{id}":
    parameters:
    - name: id
      in: path
      description: id of the Account Request
      required: true
      schema:
        type: integer
    get:
      summary: Show a specific Account Request by id
      tags:
      - Account Requests
      responses:
        '200':
          description: Retrieve a specific account request with valid id
    patch:
      summary: Update Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '200':
          description: Reject account request
        '422':
          description: Attempt to send Invalid status in Patch
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: Approved
              required:
              - status
    put:
      summary: Update Account Request
      tags:
      - Account Requests
      parameters: []
      responses:
        '200':
          description: Reject account request
        '422':
          description: Attempt to send Invalid status in PUT
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: Approved
              required:
              - status
    delete:
      summary: Delete Account Request
      tags:
      - Account Requests
      responses:
        '204':
          description: successful
  "/api/v1/bookmarks":
    get:
      summary: list bookmarks
      tags:
      - Bookmarks
      responses:
        '200':
          description: successful
    post:
      summary: create bookmark
      tags:
      - Bookmarks
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                title:
                  type: string
                description:
                  type: string
                topic_id:
                  type: integer
                rating:
                  type: integer
              required:
              - url
              - title
              - description
              - topic_id
              - rating
  "/api/v1/bookmarks/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show bookmark
      tags:
      - Bookmarks
      responses:
        '200':
          description: successful
        '404':
          description: not_found
    put:
      summary: update bookmark
      tags:
      - Bookmarks
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
    delete:
      summary: delete bookmark
      tags:
      - Bookmarks
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/bookmarks/{id}/bookmarkratings":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: save bookmark rating score
      tags:
      - Bookmarks
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rating:
                  type: integer
              required:
              - rating
    get:
      summary: get bookmark rating score
      tags:
      - Bookmarks
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/courses/{id}/add_ta/{ta_id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    - name: ta_id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: add_ta course
      tags:
      - Courses
      responses:
        '201':
          description: successful
  "/api/v1/courses/{id}/tas":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: view_tas course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{id}/remove_ta/{ta_id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    - name: ta_id
      in: path
      description: ta_id
      required: true
      schema:
        type: string
    get:
      summary: remove_ta course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses/{id}/copy":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: copy course
      tags:
      - Courses
      responses:
        '200':
          description: successful
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses
      responses:
        '200':
          description: successful
    post:
      summary: create course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required:
              - name
              - directory_path
              - institution_id
              - instructor_id
  "/api/v1/courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show course
      tags:
      - Courses
      responses:
        '200':
          description: successful
    patch:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required: []
    put:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                directory_path:
                  type: string
                instructor_id:
                  type: integer
                institution_id:
                  type: integer
                info:
                  type: string
              required: []
    delete:
      summary: delete course
      tags:
      - Courses
      responses:
        '204':
          description: successful
  "/api/v1/institutions":
    get:
      summary: list institutions
      tags:
      - Institutions
      responses:
        '200':
          description: successful
    post:
      summary: create institution
      tags:
      - Institutions
      parameters: []
      responses:
        '201':
          description: Created a institution
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v1/institutions/{id}":
    parameters:
    - name: id
      in: path
      description: id of the institution
      required: true
      schema:
        type: integer
    get:
      summary: show institution
      tags:
      - Institutions
      responses:
        '200':
          description: successful
    patch:
      summary: update institution
      tags:
      - Institutions
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    put:
      summary: update institution
      tags:
      - Institutions
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete institution
      tags:
      - Institutions
      responses:
        '200':
          description: successful
  "/api/v1/invitations":
    get:
      summary: list invitations
      tags:
      - Invitations
      responses:
        '200':
          description: Success
    post:
      summary: create invitation
      tags:
      - Invitations
      parameters: []
      responses:
        '201':
          description: Create successful
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                assignment_id:
                  type: integer
                from_id:
                  type: integer
                to_id:
                  type: integer
                reply_status:
                  type: string
              required:
              - assignment_id
              - from_id
              - to_id
  "/api/v1/invitations/{id}":
    parameters:
    - name: id
      in: path
      description: id of the invitation
      required: true
      schema:
        type: integer
    get:
      summary: show invitation
      tags:
      - Invitations
      responses:
        '200':
          description: Show invitation
        '404':
          description: Not found
    patch:
      summary: update invitation
      tags:
      - Invitations
      parameters: []
      responses:
        '200':
          description: Update successful
        '422':
          description: Invalid request
        '404':
          description: Not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reply_status:
                  type: string
              required: []
    delete:
      summary: Delete invitation
      tags:
      - Invitations
      responses:
        '204':
          description: Delete successful
        '404':
          description: Not found
  "/api/v1/invitations/user/{user_id}/assignment/{assignment_id}":
    parameters:
    - name: user_id
      in: path
      description: id of user
      required: true
      schema:
        type: integer
    - name: assignment_id
      in: path
      description: id of assignment
      required: true
      schema:
        type: integer
    get:
      summary: Show all invitation for the given user and assignment
      tags:
      - Invitations
      responses:
        '200':
          description: Show all invitations for the user for an assignment
        '404':
          description: Not found
  "/api/v1/questionnaires":
    get:
      summary: list questionnaires
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
    post:
      summary: create questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                questionnaire_type:
                  type: string
                private:
                  type: boolean
                min_question_score:
                  type: integer
                max_question_score:
                  type: integer
                instructor_id:
                  type: integer
              required:
              - id
              - name
              - questionnaire_type
              - private
              - min_question_score
              - max_question_score
              - instructor_id
  "/api/v1/questionnaires/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show questionnaire
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not_found
    put:
      summary: update questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                min_question_score:
                  type: integer
    patch:
      summary: update questionnaire
      tags:
      - Questionnaires
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                min_question_score:
                  type: integer
    delete:
      summary: delete questionnaire
      tags:
      - Questionnaires
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/questionnaires/toggle_access/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: toggle access
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questionnaires/copy/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    post:
      summary: copy questionnaire
      tags:
      - Questionnaires
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions":
    get:
      summary: list questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
    post:
      summary: create item
      tags:
      - Questions
      parameters: []
      responses:
        '201':
          description: created
        '404':
          description: questionnaire id not found
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                weight:
                  type: integer
                questionnaire_id:
                  type: integer
                break_before:
                  type: boolean
                txt:
                  type: string
                question_type:
                  type: string
              required:
              - weight
              - questionnaire_id
              - break_before
              - txt
              - question_type
  "/api/v1/questions/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show item
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not_found
    put:
      summary: update item
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                break_before:
                  type: boolean
                seq:
                  type: integer
    patch:
      summary: update item
      tags:
      - Questions
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                break_before:
                  type: boolean
                seq:
                  type: integer
    delete:
      summary: delete item
      tags:
      - Questions
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/delete_all/questionnaire/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    delete:
      summary: delete all questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/show_all/questionnaire/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: show all questions
      tags:
      - Questions
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/questions/types":
    get:
      summary: item types
      tags:
      - Questions
      responses:
        '200':
          description: successful
  "/api/v1/roles":
    get:
      summary: list roles
      tags:
      - Roles
      responses:
        '200':
          description: successful
    post:
      summary: create role
      tags:
      - Roles
      parameters: []
      responses:
        '201':
          description: Created a role
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
  "/api/v1/roles/{id}":
    parameters:
    - name: id
      in: path
      description: id of the role
      required: true
      schema:
        type: integer
    get:
      summary: show role
      tags:
      - Roles
      responses:
        '200':
          description: successful
    patch:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    put:
      summary: update role
      tags:
      - Roles
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                parent_id:
                  type: integer
                default_page_id:
                  type: integer
              required:
              - name
    delete:
      summary: delete role
      tags:
      - Roles
      responses:
        '204':
          description: successful
  "/api/v1/sign_up_topics":
    get:
      summary: Get sign-up topics
      parameters:
      - name: assignment_id
        in: query
        description: Assignment ID
        required: true
        schema:
          type: integer
      - name: topic_ids
        in: query
        description: Topic Identifier
        required: false
        schema:
          type: string
      tags:
      - SignUpTopic
      responses:
        '200':
          description: successful
    delete:
      summary: Delete sign-up topics
      parameters:
      - name: assignment_id
        in: query
        description: Assignment ID
        required: true
        schema:
          type: integer
      - name: topic_ids
        in: query
        items:
          type: string
        description: Topic Identifiers to delete
        required: false
        schema:
          type: array
      tags:
      - SignUpTopic
      responses:
        '200':
          description: successful
    post:
      summary: create a new topic in the sheet
      tags:
      - SignUpTopic
      parameters: []
      responses:
        '201':
          description: Success
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_identifier:
                  type: integer
                topic_name:
                  type: string
                max_choosers:
                  type: integer
                category:
                  type: string
                assignment_id:
                  type: integer
                micropayment:
                  type: integer
              required:
              - topic_identifier
              - topic_name
              - max_choosers
              - category
              - assignment_id
              - micropayment
  "/api/v1/sign_up_topics/{id}":
    parameters:
    - name: id
      in: path
      description: id of the sign up topic
      required: true
      schema:
        type: integer
    put:
      summary: update a new topic in the sheet
      tags:
      - SignUpTopic
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_identifier:
                  type: integer
                topic_name:
                  type: string
                max_choosers:
                  type: integer
                category:
                  type: string
                assignment_id:
                  type: integer
                micropayment:
                  type: integer
              required:
              - topic_identifier
              - topic_name
              - category
              - assignment_id
  "/api/v1/signed_up_teams/sign_up":
    post:
      summary: Creates a signed up team
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '201':
          description: signed up team created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: integer
                topic_id:
                  type: integer
              required:
              - team_id
              - topic_id
  "/api/v1/signed_up_teams/sign_up_student":
    parameters:
    - name: user_id
      in: query
      description: User ID
      required: true
      schema:
        type: integer
    post:
      summary: Creates a signed up team by student
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '201':
          description: signed up team created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                topic_id:
                  type: integer
              required:
              - topic_id
  "/api/v1/signed_up_teams":
    parameters:
    - name: topic_id
      in: query
      description: Topic ID
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves signed up teams
      tags:
      - SignedUpTeams
      responses:
        '200':
          description: signed up teams found
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  topic_id:
                    type: integer
                  team_id:
                    type: integer
                  is_waitlisted:
                    type: boolean
                  preference_priority_number:
                    type: integer
                required:
                - id
                - topic_id
                - team_id
                - is_waitlisted
                - preference_priority_number
        '404':
          description: signed up teams not found
  "/api/v1/signed_up_teams/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    put:
      summary: Updates a signed up team
      tags:
      - SignedUpTeams
      parameters: []
      responses:
        '200':
          description: signed up team updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                is_waitlisted:
                  type: boolean
                preference_priority_number:
                  type: integer
    delete:
      summary: Deletes a signed up team
      tags:
      - SignedUpTeams
      responses:
        '204':
          description: signed up team deleted
        '422':
          description: invalid request
  "/login":
    post:
      summary: Logs in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: successful login
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                password:
                  type: string
              required:
              - user_name
              - password
  /api/v1/student_tasks/list:
      get:
        summary: List all Student Tasks
        tags:
          - Student Tasks
        responses:
          '200':
            description: An array of student tasks
  /api/v1/student_tasks/view:
    get:
      summary: View a student task
      tags:
        - Student Tasks
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: The ID of the student task to retrieve
      responses:
        '200':
          description: A specific student task





servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3002
